{"version":3,"sources":["components/CharacterContainer/index.js","components/Cards/index.js","components/Footer/index.js","components/Nav/index.js","App.js","index.js"],"names":["CharacterContainer","props","className","children","CharacterCard","onClick","onImgClick","id","alt","name","src","image","Footer","href","target","data-color-scheme","data-size","aria-label","Nav","currentScore","class","highestScore","App","state","characters","clicked","score","highScore","startG","characterId","includes","setState","push","shuffledCharacters","array","i","length","j","Math","floor","random","temp","shuffleArray","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"0tDAMeA,MAHf,SAA4BC,GAC1B,OAAO,yBAAKC,UAAU,UAAUD,EAAME,WCazBC,G,MAdO,SAAAH,GACpB,OACE,yBAAKC,UAAU,OAAOG,QAAS,kBAAMJ,EAAMK,WAAWL,EAAMM,MAC1D,yBAAKL,UAAU,YACb,yBACEM,IAAKP,EAAMQ,KAAO,SAClBC,IAAKT,EAAMU,MACXT,UAAU,gB,aCSLU,MAff,WACE,OACE,yBAAKV,UAAU,UACb,kBAAC,IAAD,CACEW,KAAK,0CACLC,OAAO,SACPC,oBAAkB,gDAClBC,YAAU,QACVC,aAAW,2BALb,4BCiBSC,G,MArBH,SAAAjB,GACV,OACE,yBAAKC,UAAU,uCAAuCK,GAAG,UACvD,uBAAGL,UAAU,eAAeW,KAAK,KAC/B,yBACEX,UAAU,OACVQ,IAAI,qNAGR,yBAAKR,UAAU,eACb,2DAEF,yBAAKA,UAAU,0BACb,uBAAGA,UAAU,gBAAb,UAAoCD,EAAMkB,cAC1C,yBAAKC,MAAM,OACX,uBAAGlB,UAAU,YAAb,mBAAyCD,EAAMoB,kB,ICuExCC,E,2MApEbC,MAAQ,CACNC,aACAC,QAAS,GACTC,MAAO,EACPC,UAAW,EACXN,aAAc,G,EAGhBO,OAAS,SAAAC,GACH,EAAKN,MAAME,QAAQK,SAASD,GAC9B,EAAKE,SAAS,CACZN,QAAS,GACTC,MAAO,EACPC,UAAW,KAGb,EAAKJ,MAAME,QAAQO,KAAKH,GAExB,EAAKE,SAAS,CACZL,MAAO,EAAKH,MAAMG,MAAQ,EAC1BC,UAAW,EAAKJ,MAAMI,UAAY,IAGlC,EAAKJ,MAAMI,WAAa,GACxB,EAAKJ,MAAMI,UAAY,EAAKJ,MAAMF,cAElC,EAAKU,SAAS,CACZV,aAAc,EAAKE,MAAMI,c,wEAMvB,IAAD,OACDM,EA7CV,SAAsBC,GACpB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACjBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,EAsCsBQ,CAAaC,KAAKpB,MAAMC,YACnD,OACE,6BACE,kBAAC,EAAD,CACEL,aAAcwB,KAAKpB,MAAMG,MACzBL,aAAcsB,KAAKpB,MAAMF,eAE3B,yBAAKnB,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,2EAEF,yBAAKA,UAAU,YACb,kBAAC,EAAD,KACG+B,EAAmBW,KAAI,SAAApB,GAAU,OAChC,kBAAC,EAAD,CACEqB,IAAKrB,EAAWjB,GAChBA,GAAIiB,EAAWjB,GACfI,MAAOa,EAAWb,MAClBF,KAAMe,EAAWf,KACjBH,WAAY,kBAAM,EAAKsB,OAAOJ,EAAWjB,YAKjD,yBAAKL,UAAU,eAGnB,kBAAC,EAAD,W,GA/DU4C,aCflBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.63eadb90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction CharacterContainer(props) {\r\n  return <div className=\"buffer\">{props.children}</div>;\r\n}\r\nexport default CharacterContainer;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst CharacterCard = props => {\r\n  return (\r\n    <div className=\"card\" onClick={() => props.onImgClick(props.id)}>\r\n      <div className=\"card-img\">\r\n        <img\r\n          alt={props.name + \" Image\"}\r\n          src={props.image}\r\n          className=\"cardImg\"\r\n        ></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport GitHubButton from \"react-github-btn\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <GitHubButton\r\n        href=\"https://github.com/1Fungi99/Clicky-Game\"\r\n        target=\"_blank\"\r\n        data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\"\r\n        data-size=\"large\"\r\n        aria-label=\"Follow @ntkme on GitHub\"\r\n      >\r\n        Follow This Repository\r\n      </GitHubButton>\r\n    </div>\r\n  );\r\n}\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Nav = props => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light\" id=\"navBar\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        <img\r\n          className=\"logo\"\r\n          src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fvignette3.wikia.nocookie.net%2Fspongebob%2Fimages%2F0%2F0e%2FOld_SpongeBob_SquarePants_logo.png%2Frevision%2Flatest%3Fcb%3D20150817094426&f=1&nofb=1\"\r\n        ></img>\r\n      </a>\r\n      <div className=\"text-center\">\r\n        <h1>Click a character to begin</h1>\r\n      </div>\r\n      <div className=\"nav navbar-nav ml-auto\">\r\n        <p className=\"currentScore\">Score: {props.currentScore}</p>\r\n        <div class=\"vl\"></div>\r\n        <p className=\"topScore\"> Highest Score: {props.highestScore}</p>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\n// importing character data from JSON file\nimport characters from \"./characters.json\";\n// importing components\nimport CharacterContainer from \"./components/CharacterContainer\";\nimport CharacterCard from \"./components/Cards\";\nimport Footer from \"./components/Footer\";\nimport Nav from \"./components/Nav\";\n\n// Durstenfled shuffler function\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nclass App extends Component {\n  state = {\n    characters,\n    clicked: [],\n    score: 0,\n    highScore: 1,\n    highestScore: 0\n  };\n\n  startG = characterId => {\n    if (this.state.clicked.includes(characterId)) {\n      this.setState({\n        clicked: [],\n        score: 0,\n        highScore: 1\n      });\n    } else {\n      this.state.clicked.push(characterId);\n\n      this.setState({\n        score: this.state.score + 1,\n        highScore: this.state.highScore + 1\n      });\n      if (\n        this.state.highScore >= 0 &&\n        this.state.highScore > this.state.highestScore\n      ) {\n        this.setState({\n          highestScore: this.state.highScore\n        });\n      }\n    }\n  };\n\n  render() {\n    const shuffledCharacters = shuffleArray(this.state.characters);\n    return (\n      <div>\n        <Nav\n          currentScore={this.state.score}\n          highestScore={this.state.highestScore}\n        />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-3\">\n              <h2>Don't click on a character more than once!</h2>\n            </div>\n            <div className=\"col-md-6\">\n              <CharacterContainer>\n                {shuffledCharacters.map(characters => (\n                  <CharacterCard\n                    key={characters.id}\n                    id={characters.id}\n                    image={characters.image}\n                    name={characters.name}\n                    onImgClick={() => this.startG(characters.id)}\n                  />\n                ))}\n              </CharacterContainer>\n            </div>\n            <div className=\"col-md-3\"></div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}